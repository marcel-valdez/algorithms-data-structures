THE PLAN

Fill this file with the exercise you wrote before committing

The Basics:
	Chapter 1: Fundamentals
		1.3 Bags, Queues, and Stacks
			1.3.4 Parens syntax evaluator with Stack (marcel-valdez)
			1.3.10 Convert infix to postfix using Stacks (marcel-valdez)
			1.3.11 Evaluate postfix expressions using Stack (marcel-valdez)
			1.3.20 Delete an element from a linked list (magg)
			1.3.21 Find an element inside a linked list (magg)
			1.3.30 Reverse a linked list (magg)
			1.3.34 Randomize Bag Elements (priangulo)
		1.4 Analysis of Algorithms 
			1.4.11 Number repetition counter in an array in O(log2 n) time (priangulo)
	Chapter 2: Sorting
		2.1 Elementary Sorts
			2.1.15 Optimize insertion sort. (mrcel-valdez)
			2.1.16 Certification.
	Chapter 3: Searching
		3.1 Elementary Symbol Tables
		    Create API for Symbol Table exercises utilities
	Chapter 5: Strings
		5.1 String Sorts
			5.1.15 Sublinear number sorting algorithm (marcel-valdez)

The Opening:
	Chapter 2: Sorting.
		2.2 Mergesort
		2.3 Quicksort
	Chapter 3: Searching. 
		3.2 Binary Search Trees
			Reverse a BST and Tree API (magg)
		3.3 Balanced Search Trees
	Chapter 5: Strings. 
		5.2 Tries
		5.3 Substring Search

The Middlegame:
	Chapter 2: Sorting. 
		2.4 Elementary Sort
	Chapter 3: Searching. 
		3.4 Hash Tables
	Chapter 4: Graphs. 
		4.1 Unidirected Graph
		4.2 Directed Graphs
	Chapter 6: Context. 
		6.2 Event-Drive Simulation 
		6.6 Intractability

The Endgame:
	Chapter 1: Fundamentals. 
		1.5 Case Study: Union-Find
	Chapter 2: Sorting. 
		2.5 Applications of Sorting
	Chapter 3: Searching. 
		3.5 Applications
	Chapter 4: Graphs. 
		4.3 Minimum Spanning Trees
		4.4 Shortest Paths

The Aftermath:
	Chapter 5: Strings. 
		5.4 Regular Expressions 
		5.5 Data Compression
	Chapter 6: Context. 
		6.3 Suffix Arrays
		6.5 Reductions